{
  "address": "0xFC6e28960479E90F14a007Ca7523f118473119b7",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "GuessNumber_GameInProcess",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "GuessNumber_GameIsFinished",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GuessNumber_NotEnoughMoney",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "GuessNumber_NotWinner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "GuessNumber_WinnerCannotPlay",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "checkFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkGuessed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkPrize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkSecretNumber",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkWinner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "secretNumber",
          "type": "uint8"
        }
      ],
      "name": "createGame",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gameNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_secretNumber",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "prize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "myNumber",
          "type": "uint8"
        }
      ],
      "name": "tryToGuess",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x04f59dae2cd598a7a910c3c87603aaad2869d323620e778cd712af1c69eae75f",
  "receipt": {
    "to": null,
    "from": "0xd5F0f6cD78B121Ab7a319B06631359A825619d3C",
    "contractAddress": "0xFC6e28960479E90F14a007Ca7523f118473119b7",
    "transactionIndex": 22,
    "gasUsed": "901990",
    "logsBloom": "0x
    "blockHash": "0xab69ce2799fa3cc5712b4a56495eed104be1afc6ed8cdd9277e03a985bf27514",
    "transactionHash": "0x04f59dae2cd598a7a910c3c87603aaad2869d323620e778cd712af1c69eae75f",
    "logs": [
      {
        "transactionIndex": 22,
        "blockNumber": 9310784,
        "transactionHash": "0x04f59dae2cd598a7a910c3c87603aaad2869d323620e778cd712af1c69eae75f",
        "address": "0xFC6e28960479E90F14a007Ca7523f118473119b7",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000d5f0f6cd78b121ab7a319b06631359a825619d3c"
        ],
        "data": "0x",
        "logIndex": 65,
        "blockHash": "0xab69ce2799fa3cc5712b4a56495eed104be1afc6ed8cdd9277e03a985bf27514"
      }
    ],
    "blockNumber": 9310784,
    "cumulativeGasUsed": "5768525",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 17,
  "solcInputHash": "3cbe42cf1f8bb63a01b5cda2180c02ab",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"GuessNumber_GameInProcess\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"GuessNumber_GameIsFinished\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GuessNumber_NotEnoughMoney\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"GuessNumber_NotWinner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"GuessNumber_WinnerCannotPlay\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"checkFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkGuessed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkPrize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkSecretNumber\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkWinner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"secretNumber\",\"type\":\"uint8\"}],\"name\":\"createGame\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_secretNumber\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"myNumber\",\"type\":\"uint8\"}],\"name\":\"tryToGuess\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GuessNumber.sol\":\"GuessNumber\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GuessNumber.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.8;\\n\\n// Uncomment this line to use console.log\\n// import \\\"hardhat/console.sol\\\";\\n\\n// Contract address 0x4298A5aF5AFa8200B9fBb3A6b94b113413B6747d\\n\\nimport \\\"../node_modules/@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract GuessNumber is Ownable{\\n    \\n    address winner;\\n    address _owner;\\n\\n    uint8 public i_secretNumber;\\n    uint public fee;\\n    uint public prize;\\n    uint private gameAmount;\\n    bool guessed = true;\\n    bool a = false;\\n\\n    error GuessNumber_GameIsFinished(address);\\n    error GuessNumber_GameInProcess(address);\\n    error GuessNumber_WinnerCannotPlay(address);\\n    error GuessNumber_NotEnoughMoney();\\n    error GuessNumber_NotWinner(address);\\n\\n    //Set the number to guess, the owner of the game, and the games that have been played so far.\\n    constructor(){\\n        fee = 10**14 wei;\\n        _owner = msg.sender;\\n        winner = msg.sender;\\n        gameAmount = 0;\\n    }\\n\\n    function tryToGuess(uint8 myNumber) public payable {\\n        if(guessed){\\n            revert GuessNumber_GameIsFinished(msg.sender);\\n        }\\n        //require(msg.sender != _owner, \\\"Owner cannot play the game\\\");\\n        if(msg.value < fee){\\n            revert GuessNumber_NotEnoughMoney();\\n        }\\n        if(msg.sender == winner){\\n            revert GuessNumber_WinnerCannotPlay(msg.sender);\\n        }\\n        (bool success_pay, ) = address(this).call{value: msg.value}(\\\"\\\");\\n        prize = address(this).balance;\\n        if (myNumber == i_secretNumber) {\\n            guessed = true;\\n            winner = msg.sender;\\n            (bool success_receive, ) = winner.call{value: address(this).balance}(\\\"\\\");\\n        }\\n    }\\n\\n    function createGame(uint8 secretNumber) public payable{\\n        if(!guessed){\\n            revert GuessNumber_GameInProcess(msg.sender);\\n        }\\n        if(msg.sender != winner){\\n            revert GuessNumber_NotWinner(msg.sender);\\n        }\\n        guessed = false;\\n        gameAmount++;\\n        i_secretNumber = secretNumber;      \\n    }\\n\\n    function checkGuessed() public view returns (bool) {\\n        return guessed;\\n    }\\n\\n    function gameNumber() public view returns (uint){\\n        return gameAmount;\\n    }\\n\\n    function checkFee() public view returns (uint){\\n        return fee;\\n    }\\n\\n    function checkPrize() public view returns (uint){\\n        return prize;\\n    }\\n\\n    function checkWinner() public view returns (address){\\n        return winner;\\n    }\\n\\n    function checkSecretNumber() public view returns (uint8){\\n        return i_secretNumber;\\n    }\\n}\\n\",\"keccak256\":\"0x340169307e08037996c5fa15226bde95d163963fdc604a786191ad4ac18b082b\",\"license\":\"UNLICENSED\"},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526001600660006101000a81548160ff0219169083151502179055506000600660016101000a81548160ff02191690831515021790555034801561004657600080fd5b506100636100586100ff60201b60201c565b61010760201b60201c565b655af3107a400060038190555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006005819055506101cb565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610d34806101da6000396000f3fe6080604052600436106100dd5760003560e01c8063cae882961161007f578063ddca3f4311610059578063ddca3f431461026d578063e3ac5d2614610298578063e580f6ab146102c3578063f2fde38b146102df576100dd565b8063cae88296146101fb578063ccc9732814610226578063d8d40cee14610242576100dd565b80634de2d5d5116100bb5780634de2d5d514610163578063715018a61461018e5780638da5cb5b146101a5578063ad38867e146101d0576100dd565b806318e10cf0146100e25780631904863c1461010d5780634cf43d6514610138575b600080fd5b3480156100ee57600080fd5b506100f7610308565b6040516101049190610999565b60405180910390f35b34801561011957600080fd5b5061012261031b565b60405161012f91906109cd565b60405180910390f35b34801561014457600080fd5b5061014d610325565b60405161015a9190610999565b60405180910390f35b34801561016f57600080fd5b5061017861033c565b60405161018591906109cd565b60405180910390f35b34801561019a57600080fd5b506101a3610346565b005b3480156101b157600080fd5b506101ba61035a565b6040516101c79190610a29565b60405180910390f35b3480156101dc57600080fd5b506101e5610383565b6040516101f29190610a29565b60405180910390f35b34801561020757600080fd5b506102106103ad565b60405161021d9190610a5f565b60405180910390f35b610240600480360381019061023b9190610aab565b6103c4565b005b34801561024e57600080fd5b50610257610665565b60405161026491906109cd565b60405180910390f35b34801561027957600080fd5b5061028261066f565b60405161028f91906109cd565b60405180910390f35b3480156102a457600080fd5b506102ad610675565b6040516102ba91906109cd565b60405180910390f35b6102dd60048036038101906102d89190610aab565b61067b565b005b3480156102eb57600080fd5b5061030660048036038101906103019190610b04565b6107af565b005b600260149054906101000a900460ff1681565b6000600354905090565b6000600260149054906101000a900460ff16905090565b6000600454905090565b61034e610833565b61035860006108b1565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600660009054906101000a900460ff16905090565b600660009054906101000a900460ff161561041657336040517f905da00400000000000000000000000000000000000000000000000000000000815260040161040d9190610a29565b60405180910390fd5b600354341015610452576040517fdadb8b1c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156104e557336040517fc764b5dd0000000000000000000000000000000000000000000000000000000081526004016104dc9190610a29565b60405180910390fd5b60003073ffffffffffffffffffffffffffffffffffffffff163460405161050b90610b62565b60006040518083038185875af1925050503d8060008114610548576040519150601f19603f3d011682016040523d82523d6000602084013e61054d565b606091505b5050905047600481905550600260149054906101000a900460ff1660ff168260ff161415610661576001600660006101000a81548160ff02191690831515021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff164760405161061990610b62565b60006040518083038185875af1925050503d8060008114610656576040519150601f19603f3d011682016040523d82523d6000602084013e61065b565b606091505b50509050505b5050565b6000600554905090565b60035481565b60045481565b600660009054906101000a900460ff166106cc57336040517f2ba944c50000000000000000000000000000000000000000000000000000000081526004016106c39190610a29565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461075e57336040517f5c61b6270000000000000000000000000000000000000000000000000000000081526004016107559190610a29565b60405180910390fd5b6000600660006101000a81548160ff0219169083151502179055506005600081548092919061078c90610ba6565b919050555080600260146101000a81548160ff021916908360ff16021790555050565b6107b7610833565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610827576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081e90610c72565b60405180910390fd5b610830816108b1565b50565b61083b610975565b73ffffffffffffffffffffffffffffffffffffffff1661085961035a565b73ffffffffffffffffffffffffffffffffffffffff16146108af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a690610cde565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600060ff82169050919050565b6109938161097d565b82525050565b60006020820190506109ae600083018461098a565b92915050565b6000819050919050565b6109c7816109b4565b82525050565b60006020820190506109e260008301846109be565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a13826109e8565b9050919050565b610a2381610a08565b82525050565b6000602082019050610a3e6000830184610a1a565b92915050565b60008115159050919050565b610a5981610a44565b82525050565b6000602082019050610a746000830184610a50565b92915050565b600080fd5b610a888161097d565b8114610a9357600080fd5b50565b600081359050610aa581610a7f565b92915050565b600060208284031215610ac157610ac0610a7a565b5b6000610acf84828501610a96565b91505092915050565b610ae181610a08565b8114610aec57600080fd5b50565b600081359050610afe81610ad8565b92915050565b600060208284031215610b1a57610b19610a7a565b5b6000610b2884828501610aef565b91505092915050565b600081905092915050565b50565b6000610b4c600083610b31565b9150610b5782610b3c565b600082019050919050565b6000610b6d82610b3f565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bb1826109b4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610be457610be3610b77565b5b600182019050919050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610c5c602683610bef565b9150610c6782610c00565b604082019050919050565b60006020820190508181036000830152610c8b81610c4f565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610cc8602083610bef565b9150610cd382610c92565b602082019050919050565b60006020820190508181036000830152610cf781610cbb565b905091905056fea26469706673582212205b8a76dcefb7ea1e85dde5e7fff3e1803d04abfbbeafb3a106c5d13f6afcef3164736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100dd5760003560e01c8063cae882961161007f578063ddca3f4311610059578063ddca3f431461026d578063e3ac5d2614610298578063e580f6ab146102c3578063f2fde38b146102df576100dd565b8063cae88296146101fb578063ccc9732814610226578063d8d40cee14610242576100dd565b80634de2d5d5116100bb5780634de2d5d514610163578063715018a61461018e5780638da5cb5b146101a5578063ad38867e146101d0576100dd565b806318e10cf0146100e25780631904863c1461010d5780634cf43d6514610138575b600080fd5b3480156100ee57600080fd5b506100f7610308565b6040516101049190610999565b60405180910390f35b34801561011957600080fd5b5061012261031b565b60405161012f91906109cd565b60405180910390f35b34801561014457600080fd5b5061014d610325565b60405161015a9190610999565b60405180910390f35b34801561016f57600080fd5b5061017861033c565b60405161018591906109cd565b60405180910390f35b34801561019a57600080fd5b506101a3610346565b005b3480156101b157600080fd5b506101ba61035a565b6040516101c79190610a29565b60405180910390f35b3480156101dc57600080fd5b506101e5610383565b6040516101f29190610a29565b60405180910390f35b34801561020757600080fd5b506102106103ad565b60405161021d9190610a5f565b60405180910390f35b610240600480360381019061023b9190610aab565b6103c4565b005b34801561024e57600080fd5b50610257610665565b60405161026491906109cd565b60405180910390f35b34801561027957600080fd5b5061028261066f565b60405161028f91906109cd565b60405180910390f35b3480156102a457600080fd5b506102ad610675565b6040516102ba91906109cd565b60405180910390f35b6102dd60048036038101906102d89190610aab565b61067b565b005b3480156102eb57600080fd5b5061030660048036038101906103019190610b04565b6107af565b005b600260149054906101000a900460ff1681565b6000600354905090565b6000600260149054906101000a900460ff16905090565b6000600454905090565b61034e610833565b61035860006108b1565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600660009054906101000a900460ff16905090565b600660009054906101000a900460ff161561041657336040517f905da00400000000000000000000000000000000000000000000000000000000815260040161040d9190610a29565b60405180910390fd5b600354341015610452576040517fdadb8b1c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156104e557336040517fc764b5dd0000000000000000000000000000000000000000000000000000000081526004016104dc9190610a29565b60405180910390fd5b60003073ffffffffffffffffffffffffffffffffffffffff163460405161050b90610b62565b60006040518083038185875af1925050503d8060008114610548576040519150601f19603f3d011682016040523d82523d6000602084013e61054d565b606091505b5050905047600481905550600260149054906101000a900460ff1660ff168260ff161415610661576001600660006101000a81548160ff02191690831515021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff164760405161061990610b62565b60006040518083038185875af1925050503d8060008114610656576040519150601f19603f3d011682016040523d82523d6000602084013e61065b565b606091505b50509050505b5050565b6000600554905090565b60035481565b60045481565b600660009054906101000a900460ff166106cc57336040517f2ba944c50000000000000000000000000000000000000000000000000000000081526004016106c39190610a29565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461075e57336040517f5c61b6270000000000000000000000000000000000000000000000000000000081526004016107559190610a29565b60405180910390fd5b6000600660006101000a81548160ff0219169083151502179055506005600081548092919061078c90610ba6565b919050555080600260146101000a81548160ff021916908360ff16021790555050565b6107b7610833565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610827576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081e90610c72565b60405180910390fd5b610830816108b1565b50565b61083b610975565b73ffffffffffffffffffffffffffffffffffffffff1661085961035a565b73ffffffffffffffffffffffffffffffffffffffff16146108af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a690610cde565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600060ff82169050919050565b6109938161097d565b82525050565b60006020820190506109ae600083018461098a565b92915050565b6000819050919050565b6109c7816109b4565b82525050565b60006020820190506109e260008301846109be565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a13826109e8565b9050919050565b610a2381610a08565b82525050565b6000602082019050610a3e6000830184610a1a565b92915050565b60008115159050919050565b610a5981610a44565b82525050565b6000602082019050610a746000830184610a50565b92915050565b600080fd5b610a888161097d565b8114610a9357600080fd5b50565b600081359050610aa581610a7f565b92915050565b600060208284031215610ac157610ac0610a7a565b5b6000610acf84828501610a96565b91505092915050565b610ae181610a08565b8114610aec57600080fd5b50565b600081359050610afe81610ad8565b92915050565b600060208284031215610b1a57610b19610a7a565b5b6000610b2884828501610aef565b91505092915050565b600081905092915050565b50565b6000610b4c600083610b31565b9150610b5782610b3c565b600082019050919050565b6000610b6d82610b3f565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bb1826109b4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610be457610be3610b77565b5b600182019050919050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610c5c602683610bef565b9150610c6782610c00565b604082019050919050565b60006020820190508181036000830152610c8b81610c4f565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610cc8602083610bef565b9150610cd382610c92565b602082019050919050565b60006020820190508181036000830152610cf781610cbb565b905091905056fea26469706673582212205b8a76dcefb7ea1e85dde5e7fff3e1803d04abfbbeafb3a106c5d13f6afcef3164736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 375,
        "contract": "contracts/GuessNumber.sol:GuessNumber",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 141,
        "contract": "contracts/GuessNumber.sol:GuessNumber",
        "label": "winner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 143,
        "contract": "contracts/GuessNumber.sol:GuessNumber",
        "label": "_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 145,
        "contract": "contracts/GuessNumber.sol:GuessNumber",
        "label": "i_secretNumber",
        "offset": 20,
        "slot": "2",
        "type": "t_uint8"
      },
      {
        "astId": 147,
        "contract": "contracts/GuessNumber.sol:GuessNumber",
        "label": "fee",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 149,
        "contract": "contracts/GuessNumber.sol:GuessNumber",
        "label": "prize",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 151,
        "contract": "contracts/GuessNumber.sol:GuessNumber",
        "label": "gameAmount",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 154,
        "contract": "contracts/GuessNumber.sol:GuessNumber",
        "label": "guessed",
        "offset": 0,
        "slot": "6",
        "type": "t_bool"
      },
      {
        "astId": 157,
        "contract": "contracts/GuessNumber.sol:GuessNumber",
        "label": "a",
        "offset": 1,
        "slot": "6",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}